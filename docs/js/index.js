import{getMatrix}from"./modules/getMatrix.js";import{findCoordinatesByNumber}from"./modules/findCoordinatesByNumber.js";import{isValidForSwap}from"./modules/isValidForSwap.js";import{isWon}from"./modules/isWon.js";import{addWonClass}from"./modules/addWonClass.js";import{setPositionItems}from"./modules/setPositionItems.js";import{createPuzzleNodes}from"./modules/createPuzzleNodes.js";import{removeElementsFromDom}from"./modules/removeElementsFromDom.js";import{swap}from"./modules/swap.js";import{setPuzzleColor}from"./modules/setPuzzleColor.js";import{setPuzzlesSize}from"./modules/setPuzzlesSize.js";const gameNode=document.querySelector(".game"),containerNode=document.querySelector(".puzzle"),resetBtn=document.getElementById("reset"),shuffleBtn=document.getElementById("shuffle"),sizeBtn=document.getElementById("size"),colorBtn=document.getElementById("color");let isGameSmall=!1,matrixSize=null,puzzleSize=null,matrix=null,maxShuffleCount=null,shuffleSpeed=null;function puzzleGameInit(){shuffleSpeed=isGameSmall?(matrixSize=3,puzzleSize=9,maxShuffleCount=20,120):(matrixSize=4,puzzleSize=16,maxShuffleCount=80),createPuzzleNodes(puzzleSize,containerNode),matrix=getMatrix(matrixSize),setPositionItems(matrix),setPuzzlesSize(isGameSmall),setPuzzleColor()}function removePuzzleItems(){var e=Array.from(document.querySelectorAll(".item"));removeElementsFromDom(e)}puzzleGameInit();let timer,shuffled=!1;const shuffledClassName="gameShuffle";function changeInnerHtmlText(e){let t;t=isGameSmall?"3x3":"4x4",e.target.firstChild.innerHTML=t}shuffleBtn.addEventListener("click",()=>{let e=0;clearInterval(timer),shuffled||(timer=setInterval(()=>{randomSwap(matrix),setPositionItems(matrix),gameNode.classList.add(shuffledClassName),shuffled=!0,e+=1,e>=maxShuffleCount&&(clearInterval(timer),gameNode.classList.remove(shuffledClassName),shuffled=!1)},shuffleSpeed))}),resetBtn.addEventListener("click",()=>{matrix=getMatrix(matrixSize),setPositionItems(matrix)}),sizeBtn.addEventListener("click",e=>{changeInnerHtmlText(e),isGameSmall=!isGameSmall,removePuzzleItems(),puzzleGameInit()}),colorBtn.addEventListener("click",()=>{setPuzzleColor()});let blokedCoords=null;function randomSwap(e){var t=findCoordinatesByNumber(puzzleSize,e),o=findValidCoords(t,e,blokedCoords),o=o[Math.floor(Math.random()*o.length)];swap(t,o,e),blokedCoords=t}function findValidCoords(o,s,l){const r=[];for(let t=0;t<s.length;t++)for(let e=0;e<s[t].length;e++)isValidForSwap({x:e,y:t},o)&&(l&&l.x===e&&l.y===t||r.push({x:e,y:t}));return r}function keydownHandler(e,t,o){var s=findCoordinatesByNumber(t,o);const l={x:s.x,y:s.y};t=e.key.split("Arrow")[1].toLowerCase(),e=o.length;switch(t){case"up":l.y+=1;break;case"down":--l.y;break;case"left":l.x+=1;break;case"right":--l.x}l.y>=e||l.y<0||l.x>=e||l.x<0||(swapAndCheck(s,l,o),setPositionItems(o))}function swapAndCheck(e,t,o){swap(e,t,o),isWon(o)&&addWonClass(containerNode,"puzzleWon")}containerNode.addEventListener("click",e=>{var t=e.target.closest("button");t&&(e=Number(t.dataset.matrixId),t=findCoordinatesByNumber(e,matrix),e=findCoordinatesByNumber(puzzleSize,matrix),isValidForSwap(t,e)&&(swapAndCheck(e,t,matrix),setPositionItems(matrix)))}),window.addEventListener("keydown",e=>{shuffled||e.key.includes("Arrow")&&keydownHandler(e,puzzleSize,matrix)});